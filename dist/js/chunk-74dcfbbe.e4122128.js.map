{"version":3,"sources":["webpack:///./src/api/interceptors.js","webpack:///./src/api/index.js","webpack:///./src/views/cs/event-view.vue?a2a0","webpack:///src/views/cs/event-view.vue","webpack:///./src/views/cs/event-view.vue?03da","webpack:///./src/views/cs/event-view.vue","webpack:///./src/views/cs/event-view.vue?383e","webpack:///./src/api/modules/cs.js"],"names":["setInterceptors","instance","interceptors","request","use","config","headers","Authorization","store","state","userInfo","apchTknVal","app_os_code","getters","app_version","bus","$emit","error","msg","response","data","message","time","console","Promise","reject","code","bridge","callNative","getToken","commit","root","router","push","status","createWithAuth","options","baseUrl","process","axios","create","Object","assign","baseURL","timeout","responseEncoding","render","_vm","this","_h","$createElement","_c","_self","staticClass","viewData","domProps","_s","htmlCtt","_e","staticRenderFns","name","delYn","endYn","evntBbsSno","evntEndDtm","evntStrtDtm","inqTims","listImgPth","mdfDtm","mdfDvCd","mdfpeCustSno","mdfpeIpAdr","regDtm","regDvCd","regpeIpAdr","regpeSno","ttlNm","useYn","created","fetchData","methods","getEventView","component","getNoticeList","params","get","getNoticeView","getEventList","postQa","post","getfaqList","getfaqCategory","getQaView","getQaCategory"],"mappings":"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","file":"js/chunk-74dcfbbe.e4122128.js","sourcesContent":["import bus from '@/utils/bus';\nimport bridge from '@/utils/WebViewBridgeDefault';\nimport store from '@/store';\nimport router from '@/router';\n\nfunction setInterceptors(instance) {\n  instance.interceptors.request.use(\n    (config) => {\n      config.headers.Authorization = store.state.userInfo.apchTknVal;\n      config.headers.app_os_code = store.getters['deviceInfo/OS_CODE'];\n      config.headers.app_version = store.getters['deviceInfo/APP_VERSION'];\n      bus.$emit('loading', true);\n      return config;\n    },\n    (error) => {\n      bus.$emit('loading', false);\n      bus.$emit('toast', { msg: error.response.data.message, time: 3000 });\n      console.error(error);\n      return Promise.reject(error.response);\n    }\n  );\n  instance.interceptors.response.use(\n    (config) => {\n      bus.$emit('loading', false);\n      return config.data;\n    },\n    async (error) => {\n      bus.$emit('loading', false);\n      //bus.$emit('toast', { msg: error.response.data.message, time: 3000 });\n\n      // \t토큰 만료\n      if (error.response.data.code === 'ERR104') {\n        bridge.callNative.getToken();\n        bus.$emit('toast', {\n          msg: '토큰 만료',\n        });\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        // Server Unchecked Exception (서버 에러) -> 백엔드팀에 문의\n        if (error.response.data.code === 'ERR001') {\n          bus.$emit('toast', {\n            msg: '서버 에러',\n          });\n        }\n\n        // Bxm Unchecked Exception (BXM 에러) -> 백엔드팀에 문의\n        if (error.response.data.code === 'ERR002') {\n          bus.$emit('toast', {\n            msg: 'BXM 에러',\n          });\n        }\n\n        // 시스템점검\n        if (error.response.data.code === 'ERR003') {\n          bus.$emit('toast', {\n            msg: '시스템점검',\n          });\n        }\n\n        // \t강제 앱 업데이트\n        if (error.response.data.code === 'ERR004') {\n          bus.$emit('toast', {\n            msg: '강제 앱 업데이트',\n          });\n        }\n\n        // \t접근 권한 에러\n        if (error.response.data.code === 'ERR102') {\n          bus.$emit('toast', {\n            msg: '접근 권한 에러',\n          });\n        }\n\n        // \t토큰 위변조\n        if (error.response.data.code === 'ERR105') {\n          bus.$emit('toast', {\n            msg: '토큰 위변조',\n          });\n        }\n\n        // \t토큰이 없습니다.\n        if (error.response.data.code === 'ERR106') {\n          bus.$emit('toast', {\n            msg: '토큰이 없습니다.',\n          });\n        }\n\n        // \t비밀번호가 변경되었습니다. 재 로그인해주세요.\n        if (error.response.data.code === 'ERR110') {\n          bus.$emit('toast', {\n            msg: '비밀번호가 변경되었습니다. 재 로그인해주세요.',\n          });\n        }\n        // \t파라메터 유효성 검사 에러\n        if (error.response.data.code === 'ERR301') {\n          bus.$emit('toast', {\n            msg: '파라메터 유효성 검사 에러',\n          });\n        }\n\n        // \t등록, 수정 처리 실패\n        if (error.response.data.code === 'ERR302') {\n          bus.$emit('toast', {\n            msg: '등록, 수정 처리 실패',\n          });\n        }\n\n        if (error.response?.status === 400) {\n          bus.$emit('toast', { msg: '클라이언트 에러' });\n        }\n      }\n\n      // \t삭제된 데이터 요청\n      if (error.response.data.code === 'ERR303') {\n        if (process.env.NODE_ENV === 'production') {\n          store.commit('MU_CAN_LEAVE_SITE', true, { root: true });\n          await router.push('/404');\n        } else {\n          bus.$emit('toast', {\n            msg: '삭제된 데이터 요청',\n          });\n        }\n      }\n\n      if (error.response?.status === 500) {\n        if (process.env.NODE_ENV === 'production') {\n          store.commit('MU_CAN_LEAVE_SITE', true, { root: true });\n          await router.push('/500');\n        } else {\n          bus.$emit('toast', {\n            msg: '500에러',\n          });\n        }\n      }\n      return Promise.reject(error.response);\n    }\n  );\n  return instance;\n}\n\nexport { setInterceptors };\n","import axios from 'axios';\nimport { setInterceptors } from './interceptors';\n\nfunction createWithAuth(options) {\n  // console.log(process.env.NODE_ENV);\n  const baseUrl =\n    process.env.NODE_ENV !== 'local'\n      ? `${process.env.VUE_APP_API_URL}/b2c/api/`\n      : '/b2c/api/';\n  const instance = axios.create(\n    Object.assign(\n      {\n        baseURL: baseUrl,\n        timeout: 0,\n        responseEncoding: 'utf8',\n      },\n      {\n        ...options,\n      }\n    )\n  );\n  setInterceptors(instance);\n  return instance;\n}\n\nexport const instance = createWithAuth();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('container',[_c('div',{staticClass:\"event-view\"},[(_vm.viewData.htmlCtt)?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.viewData.htmlCtt)}}):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <container>\n    <div class=\"event-view\">\n      <!--  <span class=\"img\">\n        <img :src=\"viewData.img\" alt=\"\" @error=\"noImage\" />\n      </span>-->\n      <div v-if=\"viewData.htmlCtt\" v-html=\"viewData.htmlCtt\" />\n    </div>\n  </container>\n</template>\n<script>\nimport { getEventView } from '@/api/modules/cs';\n\nexport default {\n  name: 'event-view',\n  data() {\n    return {\n      viewData: {\n        delYn: false,\n        endYn: false,\n        evntBbsSno: 1,\n        evntEndDtm: '',\n        evntStrtDtm: '',\n        htmlCtt: '',\n        inqTims: 0,\n        listImgPth: '/',\n        mdfDtm: '',\n        mdfDvCd: '',\n        mdfpeCustSno: 1,\n        mdfpeIpAdr: '',\n        regDtm: '',\n        regDvCd: '',\n        regpeIpAdr: '',\n        regpeSno: 1,\n        ttlNm: '',\n        useYn: false,\n      },\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      //이벤트 상세 api 불러오기\n      try {\n        const response = await getEventView({\n          evntBbsSno: this.$route.params.seq,\n        });\n        if (response.code === 'SUC001') {\n          this.viewData = response.data;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.event-view {\n  padding: 20px 0;\n  .img {\n    display: block;\n    img {\n      width: 100%;\n      vertical-align: top;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./event-view.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./event-view.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./event-view.vue?vue&type=template&id=225e0cfb&scoped=true&\"\nimport script from \"./event-view.vue?vue&type=script&lang=js&\"\nexport * from \"./event-view.vue?vue&type=script&lang=js&\"\nimport style0 from \"./event-view.vue?vue&type=style&index=0&id=225e0cfb&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"225e0cfb\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./event-view.vue?vue&type=style&index=0&id=225e0cfb&scoped=true&lang=scss&\"","import { instance } from '../index';\n\n/**\n * 공지사항 목록 조회\n * @author 이정민\n * @param {object} params 요청시 필요한 필수 파라미터 page, size\n * @return {object} 요청한 데이터\n */\nfunction getNoticeList(params) {\n  return instance.get(`/cbod0101r001`, { params: params });\n}\n/**\n * 공지사항 상세 조회\n * @author 이정민\n * @param {object} params 요청시 필요한 필수 파라미터 bbsSno\n * @return {object} 요청한 데이터\n */\nfunction getNoticeView(params) {\n  return instance.get(`/cbod0101r002`, { params: params });\n}\n/**\n * 이벤트 목록 조회\n * @author 지은유\n * @param {object} params 요청시 필요한 필수 파라미터 page, size ,sort\n * @return {object} 요청한 데이터\n */\nfunction getEventList(params) {\n  return instance.get(`/cbod0102r001`, { params: params });\n}\n/**\n * 이벤트 상세 조회\n * @author 지은유\n * @param {object} params 요청시 필요한 필수 파라미터 evntBbsSno\n * @return {object} 요청한 데이터\n */\nfunction getEventView(params) {\n  return instance.get(`/cbod0102r002`, { params: params });\n}\n/**\n * 1:1 문의 등록\n * @author 김소연\n * @param {object} 필수 요청 데이터 : quryQustCtgrCd(문의질문카테고리코드),qustCtt(문의내용)\n * @return {object} 요청한 데이터\n */\nfunction postQa(data) {\n  return instance.post(`/cbod0104c001`, data);\n}\n/**\n * FAQ 목록 조회\n * @author 지은유\n * @param {object} params 요청시 필요한 필수 파라미터 faqCtgrCd, keyword, page, size\n * @return {object} 요청한 데이터\n */\nfunction getfaqList(params) {\n  return instance.get(`/cbod0103r001`, { params: params });\n}\n\n/**\n * FAQ 카테고리 조회\n * @author 지은유\n * @return {object} 요청한 데이터\n */\nfunction getfaqCategory() {\n  return instance.get(`/cbod0103r002`);\n}\n\n/**\n * 1:1 문의 조회\n * @author 김소연\n * @param {object} params 요청시 필요한 필수 파라미터 fldtpQnaSno\n * @return {object} 요청한 데이터\n */\nfunction getQaView(params) {\n  return instance.get(`/cbod0104r001`, { params: params });\n}\n\n/**\n * 1:1 문의 유형 코드\n * @author 김소연\n * @param {object} params 요청시 필요한 필수 파라미터 grpCd\n * @return {object} 요청한 데이터\n */\nfunction getQaCategory(params) {\n  return instance.get(`/ccomgroup/BOD004`, { params: params });\n}\n\nexport {\n  getNoticeList,\n  getNoticeView,\n  getEventList,\n  getEventView,\n  getfaqList,\n  getfaqCategory,\n  postQa,\n  getQaView,\n  getQaCategory,\n};\n"],"sourceRoot":""}